#!/usr/bin/env bash

# Git pre-commit hook
# Runs quick checks before each commit for faster feedback

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Configuration
SKIP_COMMIT_HOOK=${SKIP_COMMIT_HOOK:-false}

echo -e "${BLUE}üî® Running pre-commit checks...${NC}"

# Allow skipping hook
if [ "$SKIP_COMMIT_HOOK" = "true" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Pre-commit hook skipped via SKIP_COMMIT_HOOK=true${NC}"
    exit 0
fi

# Get list of staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep -E '\.(ts|tsx|js|jsx)$' || true)

if [ -z "$STAGED_FILES" ]; then
    echo -e "${GREEN}‚úÖ No TypeScript/JavaScript files to check${NC}"
    exit 0
fi

echo -e "${BLUE}Checking ${#STAGED_FILES[@]} staged files...${NC}"

# Quick lint check on staged files only
echo "Running ESLint on staged files..."
if ! npx eslint $STAGED_FILES; then
    echo -e "${RED}‚ùå ESLint failed on staged files${NC}"
    echo -e "${YELLOW}üí° Tip: Run 'npm run lint:fix' to auto-fix issues${NC}"
    exit 1
fi

# Quick format check on staged files only
echo "Checking code formatting on staged files..."
if ! npx prettier --check $STAGED_FILES; then
    echo -e "${RED}‚ùå Code formatting check failed on staged files${NC}"
    echo -e "${YELLOW}üí° Tip: Run 'npm run format' to fix formatting${NC}"
    exit 1
fi

# Quick TypeScript check (no-emit)
echo "Checking TypeScript compilation..."
if ! npx tsc --noEmit; then
    echo -e "${RED}‚ùå TypeScript compilation failed${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Pre-commit checks passed!${NC}"
exit 0
